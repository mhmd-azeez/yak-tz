// THIS FILE WAS GENERATED BY `xtp-go-bindgen`. DO NOT EDIT.
package main

import (
	pdk "github.com/extism/go-pdk"
)

//export handleMessage
func _handleMessage() int32 {
	var err error
	var input Message
	err = pdk.InputJSON(&input)
	if err != nil {
		pdk.SetError(err)
		return -1
	}

	output, err := handleMessage(input)
	if err != nil {
		pdk.SetError(err)
		return -1
	}

	err = pdk.OutputJSON(output)
	if err != nil {
		pdk.SetError(err)
		return -1
	}

	return 0
}

// Tells the application how to interpret this message.
type MessageType string

const (
	Html MessageType = "html"
	Text MessageType = "text"
	Image MessageType = "image"
)

// A message from the system
type Message struct {
	// The message body. Depends on the type
	Body string `json:"body"`
	// Tells the application how to interpret this message.
	Type string `json:"type"`
	// The nickname of the originator of the message
	Nick *string `json:"nick"`
}

// Note: leave this in place, as the Go compiler will find the `export` function as the entrypoint.
func main() {}
